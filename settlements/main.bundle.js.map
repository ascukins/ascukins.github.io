{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/main-form/main-form.component.css","./src/app/main-form/main-form.component.html","./src/app/main-form/main-form.component.ts","./src/app/services/tourist.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-main-form>\\n  \\n</app-main-form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Tour settlements';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { AppComponent } from './app.component';\nimport { MainFormComponent } from './main-form/main-form.component';\nimport { TouristService } from './services/tourist.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule.forRoot(),\n    FormsModule,\n    NgSelectModule\n  ],\n  providers: [TouristService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-form/main-form.component.css\n// module id = ./src/app/main-form/main-form.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\n\\n  <div class=\\\"card-header\\\">\\n        Friendly settlements\\n  </div>\\n  <div class=\\\"card-body\\\">\\n\\n\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n                Add Transaction\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n            <!-- <label>Transaction</label> -->\\n            <div class=\\\"col-sm-4\\\">\\n              <ng-select [items]=\\\"tourists\\\"\\n                        bindLabel=\\\"name\\\"\\n                        bindValue=\\\"name\\\"\\n                        placeholder=\\\"Person\\\"\\n                        [(ngModel)]=\\\"inputPerson\\\"\\n                        [addTag]=\\\"addPerson\\\"\\n                        [clearable]=\\\"true\\\"\\n                        [markFirst]=\\\"false\\\"\\n                        \\n                        >\\n              </ng-select>\\n            </div>\\n            <div class=\\\"col-sm-3\\\">                <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Amount\\\" [(ngModel)]=\\\"inputAmount\\\">            </div>\\n            <div class=\\\"col-sm-5\\\">                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Comment\\\" [(ngModel)]=\\\"inputComment\\\">            </div>\\n\\n          </div>  \\n          <br>\\n          <div class=\\\"row\\\">          \\n            <div class=\\\"col-sm\\\">\\n            <ng-select [items]=\\\"tourists\\\"\\n                      bindLabel=\\\"name\\\"\\n                      bindValue=\\\"name\\\"\\n                      placeholder=\\\"Beneficiaries\\\"\\n                      [(ngModel)]=\\\"inputBeneficiaries\\\"\\n                      [addTag]=\\\"addPerson\\\"\\n                      [clearable]=\\\"true\\\"\\n                      [markFirst]=\\\"false\\\"\\n                      multiple=\\\"true\\\"\\n                      >\\n            </ng-select>\\n            </div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!inputPerson || !inputAmount || !inputBeneficiaries || !inputBeneficiaries.length\\\" (click)=\\\"addSpending()\\\">\\n                Add\\n                <ng-container *ngIf=\\\"inputPerson\\\">\\n                  for {{inputPerson}}\\n                </ng-container>\\n  \\n              </button>\\n            </div>\\n\\n\\n          </div>\\n        </div>\\n\\n\\n      <!-- <p>\\n          Selected person : {{selectedPerson|json}}\\n      </p>\\n\\n\\n\\n      <div class=\\\"input-group mb-3\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\" id=\\\"name-label\\\">Add tourist</span>\\n          </div>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" aria-label=\\\"Username\\\" aria-describedby=\\\"name-label\\\" (keyup.enter)=\\\"addTourist()\\\"  [(ngModel)]=\\\"touristInput\\\">\\n        </div> -->\\n        \\n        <br>\\n        <!-- <h6>Spendings</h6> -->\\n                \\n          <ngb-accordion #acc=\\\"ngbAccordion\\\" activeIds=\\\"ngb-panel-0\\\" *ngIf=\\\"tourists.length\\\">\\n          <ng-container *ngFor=\\\"let t of tourists;let i=index\\\">\\n\\n              \\n              <ngb-panel *ngIf=\\\"t.spendings.length\\\">\\n                  <ng-template ngbPanelTitle>\\n                      <span> <b>{{t.name}}</b> transactions</span>\\n                      <!-- <span class=\\\"float-right\\\"><button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeTourist(i)\\\">Remove {{t.name}}</button></span> -->\\n                  </ng-template>\\n                \\n                  <ng-template ngbPanelContent>\\n                    <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeTourist(i)\\\">Remove {{t.name}}</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addTransactionForTourist(i)\\\">Add transaction for {{t.name}}</button>\\n                    <hr> -->\\n                    <table *ngIf=\\\"t.spendings.length\\\" class=\\\"table table-striped\\\">\\n                      <tr>\\n                        <th>Amount</th>\\n                        <th>Beneficiaries</th>\\n                        <th>Comment</th>\\n                        <th> </th>\\n                      </tr>\\n                      <tr *ngFor=\\\"let sp of t.spendings; let i = index\\\">\\n                        <td>{{sp.amount | currency: 'EUR'}}</td>\\n                        <td>{{sp.beneficiaries}}</td>\\n                        <td>{{sp.comment}}</td>\\n                        <td style=\\\"width: 10px\\\"> <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"t.spendings.splice(i,1); touristService.recalcSummaries();\\\">X</button> </td>\\n                      </tr>\\n                    </table>\\n                  </ng-template>\\n                </ngb-panel>\\n                      \\n          </ng-container>\\n\\n          <ngb-panel *ngIf=\\\"touristService.summaries.length\\\">\\n              <ng-template ngbPanelTitle>\\n                  <span> <b>Summary!</b></span>\\n              </ng-template>\\n            \\n              <ng-template ngbPanelContent>\\n\\n                <table class=\\\"table table-striped\\\">\\n                  <tr>\\n                    <th>Name</th>\\n                    <th>Spent</th>\\n                    <th>Received</th>\\n                    <th>Balance</th>\\n                  </tr>\\n                  <tr *ngFor=\\\"let sm of touristService.summaries\\\">\\n                    <td>{{sm.name}}</td>\\n                    <td>{{sm.spent | currency: 'EUR': symbol }}</td>\\n                    <td>{{sm.received | currency: 'EUR': symbol}}</td>\\n                    <td>{{ sm.received - sm.spent | currency: 'EUR': symbol}}</td>\\n                  </tr>\\n                </table>\\n\\n                <ng-container>\\n                  <ul>\\n                      <li  *ngFor=\\\"let a of touristService.actions\\\">{{a.nameFrom}} pays to {{a.nameTo}} amount of {{a.amount | currency: 'EUR'}}</li>\\n                  </ul>\\n                </ng-container>\\n                    \\n              </ng-template>\\n            </ngb-panel>\\n                  \\n\\n      \\n          <!-- <ngb-panel title=\\\"Temp\\\">\\n            <ng-template ngbPanelContent>\\n              Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia\\n              aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor,\\n            </ng-template>\\n        </ngb-panel> -->\\n\\n      </ngb-accordion>\\n<!-- \\n    <hr>\\n    <pre>{{tourists | json}}</pre>\\n    <pre>{{touristService.summaries | json}}</pre>\\n    <pre>{{touristService.balances | json}}</pre>\\n    <pre>{{touristService.actions | json}}</pre> -->\\n\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-form/main-form.component.html\n// module id = ./src/app/main-form/main-form.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { TouristService } from '../services/tourist.service';\n\n@Component({\n  selector: 'app-main-form',\n  templateUrl: './main-form.component.html',\n  styleUrls: ['./main-form.component.css']\n})\nexport class MainFormComponent implements OnInit {\n\n  inputPerson: string;\n  inputAmount: number;\n  inputBeneficiaries: string[] =  [];\n  inputComment: string;\n\n  tourists: any[] = [];\n\n  addPerson = (term: string) => {\n    this.touristService.addPerson(term);\n    this.tourists = [...this.touristService.persons];\n  }\n\n  addSpending() {\n    this.touristService.addSpending(this.inputPerson, {\n      amount: this.inputAmount,\n      comment: this.inputComment,\n      beneficiaries: this.inputBeneficiaries\n    });\n    this.inputAmount = undefined;\n    this.inputComment = '';\n    this.inputBeneficiaries = [];\n    this.tourists = [...this.touristService.persons];\n  }\n\n  constructor( public touristService: TouristService) { }\n\n  ngOnInit() {\n\n    this.tourists = [...this.touristService.persons];\n    this.touristService.recalcSummaries();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-form/main-form.component.ts","import { Injectable } from '@angular/core';\nimport { Spending, Tourist, TouristSummary } from '../models/models';\n\n@Injectable()\nexport class TouristService {\n\n    persons: Tourist[] = [];\n    summaries: TouristSummary[] = [];\n\n    balances: any[] = [];\n    actions: any[] = [];\n\n    addPerson( name: string) {\n        this.persons.push(\n            {\n                name: name,\n                spendings: []\n            }\n        );\n    }\n\n    addSpending( name: string, spending: Spending) {\n        for (const p of this.persons) {\n            if ( p.name === name) {\n                p.spendings.push(spending);\n                break;\n            }\n        }\n        this.recalcSummaries();\n    }\n\n\n    addToPersonSummary( name: string, spent: number, received: number) {\n        let nameFound = false;\n        for (const p of this.summaries) {\n            if ( p.name === name) {\n                nameFound = true;\n                p.spent += spent;\n                p.received += received;\n                break;\n            }\n        }\n        if (!nameFound) {\n            this.summaries.push({\n                name: name,\n                spent: spent,\n                received: received,\n            });\n        }\n    }\n\n    recalcSummaries() {\n        for (const sm of this.summaries) {\n            sm.received = 0;\n            sm.spent = 0;\n        }\n        for (const p of this.persons) {\n            for (const sp of p.spendings) {\n                this.addToPersonSummary(p.name, sp.amount, 0);\n                const beneficiaryCount = sp.beneficiaries.length;\n                for ( const ben of sp.beneficiaries) {\n                    this.addToPersonSummary(ben, 0, sp.amount / beneficiaryCount);\n\n                }\n            }\n        }\n        this.summaries.sort( (a, b) => (a.received - a.spent) - (b.received - b.spent) );\n\n        this.balances = [];\n        for (const sm of this.summaries ) {\n            this.balances.push({\n                name: sm.name,\n                balance: (sm.received - sm.spent)\n            });\n        }\n        this.actions = [];\n        for ( let positiveBal = 0; positiveBal < this.balances.length; positiveBal++) {\n//          if (this.balances[i].balance > 0) { // has free money\n                for ( let negativeBal = this.balances.length - 1;\n                                                    negativeBal >= 0 && this.balances[positiveBal].balance > 0; negativeBal--) {\n                    if (this.balances[negativeBal].balance < 0) { // needs money\n                        let amnt = 0;\n                        if ( this.balances[positiveBal].balance > - this.balances[negativeBal].balance) {\n                            amnt = - this.balances[negativeBal].balance;\n                        } else {\n                            amnt = this.balances[positiveBal].balance;\n                        }\n                        this.actions.push({\n                            nameFrom: this.balances[positiveBal].name,\n                            nameTo:  this.balances[negativeBal].name,\n                            amount: amnt\n                        });\n                        this.balances[negativeBal].balance += amnt;\n                        this.balances[positiveBal].balance -= amnt;\n\n                    }\n                }\n//          }\n        }\n    }\n\n\n    constructor() {\n    // if (this.persons.length === 0) {\n    //   this.persons = [\n    //     {\n    //       name: 'Alex',\n    //       spendings: [\n    //         {\n    //           amount: 300,\n    //           comment: 'For transport',\n    //           beneficiaries: [\n    //             'Alex', 'Nino', 'Rito'\n    //           ]\n    //         }\n    //       ]\n\n    //     },\n    //     {\n    //       name: 'Nino',\n    //       spendings: [\n    //         {\n    //             amount: 20,\n    //             comment: 'Food',\n    //             beneficiaries: [\n    //               'Nino', 'Rito'\n    //             ]\n    //         },\n    //         {\n    //             amount: 30,\n    //             comment: 'Museum',\n    //             beneficiaries: [\n    //               'Alex', 'Nino', 'Rito'\n    //             ]\n    //           }\n    //         ]\n    //     },\n    //     {\n    //       'name': 'Tinka',\n    //       'spendings': [\n    //         {\n    //           'amount': 500,\n    //           'comment': 'hyhh',\n    //           'beneficiaries': [\n    //             'Alex',\n    //             'Nino'\n    //           ]\n    //         }\n    //       ]\n    //     }\n    //   ];\n    // }\n\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/tourist.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}