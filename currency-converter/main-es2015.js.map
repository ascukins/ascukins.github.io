{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/currency-amount-select/currency-amount-select.component.ts","./src/app/components/currency-amount-select/currency-amount-select.component.html","./src/app/components/currency-exchange/currency-exchange.component.ts","./src/app/components/currency-exchange/currency-exchange.component.html","./src/app/services/currency-rates.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'currency-converter';\n}\n","<app-currency-exchange> </app-currency-exchange>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { CurrencyAmountSelectComponent } from './components/currency-amount-select/currency-amount-select.component';\nimport { CurrencyExchangeComponent } from './components/currency-exchange/currency-exchange.component';\nimport { CurrencyRatesService } from './services/currency-rates.service';\n\n\nexport function initApp(currencyRatesService: CurrencyRatesService) {\n  return () => currencyRatesService.initializeRates();\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CurrencyAmountSelectComponent,\n    CurrencyExchangeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initApp,\n      multi: true,\n      deps: [CurrencyRatesService]\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-currency-amount-select',\n  templateUrl: './currency-amount-select.component.html',\n  styleUrls: ['./currency-amount-select.component.scss']\n})\nexport class CurrencyAmountSelectComponent implements OnInit {\n\n  @Input() currencies;\n  @Input() currency: string;\n  @Input() amount: number;\n  @Output() currencyChange = new EventEmitter<string>();\n  @Output() amountChange = new EventEmitter<number>();\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onAmountChange(amount) {\n    this.amountChange.emit(amount);\n  }\n  onCurrencyChange(currency) {\n    this.currencyChange.emit(currency);\n  }\n\n}\n","<div>\n  <input\n    type=\"number\"\n    name=\"amount\"\n    [(ngModel)]=\"amount\"\n    (ngModelChange)=\"onAmountChange($event)\"\n  />\n  <select\n    name=\"currency\"\n    [(ngModel)]=\"currency\"\n    (ngModelChange)=\"onCurrencyChange($event)\"\n  >\n    <option *ngFor=\"let curr of currencies | keyvalue\" [value]=\"curr.key\"\n      >{{ curr.key }} - {{ curr.value }}</option\n    >\n  </select>\n</div>\n","import { Component } from '@angular/core';\nimport { CurrencyRatesService } from 'src/app/services/currency-rates.service';\n\n@Component({\n  selector: 'app-currency-exchange',\n  templateUrl: './currency-exchange.component.html',\n  styleUrls: ['./currency-exchange.component.scss']\n})\nexport class CurrencyExchangeComponent {\n\n  currency1 = 'USD';\n  currency2 = 'EUR';\n  amount1 = 1.00;\n  amount2 = 1.00;\n  mostRecentAmountChanged = 1;\n\n  constructor(\n    public currencyRatesService: CurrencyRatesService\n  ) {\n    this.onAmount1Changed();\n  }\n\n  onAmount1Changed() {\n    this.mostRecentAmountChanged = 1;\n    this.amount2 = this.currencyRatesService.exchange(this.amount1, this.currency1, this.currency2);\n  }\n\n  onAmount2Changed() {\n    this.mostRecentAmountChanged = 2;\n    this.amount1 = this.currencyRatesService.exchange(this.amount2, this.currency2, this.currency1);\n  }\n\n  onCurrencyChanged() {\n    if (this.mostRecentAmountChanged === 1) {\n      this.amount2 = this.currencyRatesService.exchange(this.amount1, this.currency1, this.currency2);\n    } else {\n      this.amount1 = this.currencyRatesService.exchange(this.amount2, this.currency2, this.currency1);\n    }\n  }\n}\n","<div class=\"container\">\n  <h1>Currency exchange</h1>\n  <p>\n    {{ currencyRatesService.rateLoadStatusMessage }}\n  </p>\n  <ng-container *ngIf=\"currencyRatesService.currenciesExist()\">\n    <p>\n      Rates dated:\n      {{ currencyRatesService.rateDate }}\n    </p>\n    <p>\n      <app-currency-amount-select\n        [currencies]=\"currencyRatesService.currencies\"\n        [(amount)]=\"amount1\"\n        [(currency)]=\"currency1\"\n        (amountChange)=\"onAmount1Changed()\"\n        (currencyChange)=\"onCurrencyChanged()\"\n      >\n      </app-currency-amount-select>\n    </p>\n    <p>\n      Approximately equals to:\n    </p>\n    <p>\n      <app-currency-amount-select\n        [currencies]=\"currencyRatesService.currencies\"\n        [(amount)]=\"amount2\"\n        [(currency)]=\"currency2\"\n        (amountChange)=\"onAmount2Changed()\"\n        (currencyChange)=\"onCurrencyChanged()\"\n      >\n      </app-currency-amount-select>\n    </p>\n  </ng-container>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, of } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { RateContainer } from '../models/rate-container';\nimport { Currencies } from '../models/currencies';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrencyRatesService {\n\n  public rateLoadStatusMessage = '';\n  public currencies: Currencies;\n  public rateContainer: RateContainer;\n  public rateDate: Date = new Date();\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  isEmpty(obj: any) {\n    if (!obj) {\n      return true;\n    }\n    // tslint:disable-next-line:forin\n    for (const x in obj) {\n      return false;\n    }\n    return true;\n  }\n\n  currenciesExist() {\n    return !this.isEmpty(this.currencies);\n  }\n\n  initializeRates() {\n    return forkJoin(\n      {\n        currencies: this.http.get(environment.currencyListUrl),\n        rateContainer: this.http.get(environment.currencyRatesContainerUrl),\n      }\n    ).pipe(\n      tap(() => this.rateLoadStatusMessage = 'Openexchangerates API fetch succeded.'),\n      catchError(error => {\n        this.rateLoadStatusMessage = 'Openexchangerates API fetch failed. Using local copy. ' +\n          'Please check the settings in environment.ts';\n        return forkJoin(\n          {\n            currencies: this.http.get(environment.currencyListBackupUrl),\n            rateContainer: this.http.get(environment.currencyRatesContainerBackupUrl),\n          });\n      }),\n      catchError(err => {\n        this.rateLoadStatusMessage = 'Could not fetch rates. ' +\n          'Please check the settings in environment.ts';\n        return of({\n          currencies: {},\n          rateContainer: { rates: {} }\n        });\n      }),\n      tap(result => {\n        this.currencies = result.currencies as Currencies;\n        this.rateContainer = result.rateContainer as RateContainer;\n        this.rateContainer.rates[this.rateContainer.base] = 1;\n        this.cleanUpCurrenciesWithoutRates();\n        this.rateDate = new Date(this.rateContainer.timestamp * 1000);\n      })\n    )\n      .toPromise();\n  }\n\n  private cleanUpCurrenciesWithoutRates() {\n    Object.getOwnPropertyNames(this.currencies).forEach(currencyCode => {\n      if (!this.rateContainer.rates[currencyCode]) {\n        delete this.currencies[currencyCode];\n      }\n    });\n  }\n\n  exchange(amount: number, currencyFrom: string, currencyTo: string) {\n    amount = Number(amount);\n    const rateFrom = this.rateContainer.rates[currencyFrom];\n    const rateTo = this.rateContainer.rates[currencyTo];\n    if (rateFrom && rateTo) {\n      return amount * (rateTo / rateFrom);\n    } else {\n      return 0;\n    }\n  }\n\n}\n","\n// It is isecure and generally bad practice to keep API keys in git repo, so please populate your API key before run\nconst openexchangeratesApiKey = '0e99a90e26224cc285f0d8f8cc7cadf2';\n\nexport const environment = {\n  production: false,\n\n  currencyListUrl: 'https://openexchangerates.org/api/currencies.json',\n  currencyRatesContainerUrl: `https://openexchangerates.org/api/latest.json?app_id=${openexchangeratesApiKey}&base=USD`,\n\n  currencyListBackupUrl: '/assets/currencies/currencies.json',\n  currencyRatesContainerBackupUrl: '/assets/currencies/latest.json'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}